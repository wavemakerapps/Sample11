/*Copyright (c) 2016-2017 wavemaker.com All Rights Reserved.
 This software is the confidential and proprietary information of wavemaker.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with wavemaker.com*/

package com.sample11.services.test;

/**
 * Please modify this class to meet your needs
 * This class is not complete
 */

import java.io.File;
import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.jws.soap.SOAPBinding;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;

/**
 * This class was generated by Apache CXF 2.7.11
 * 2017-12-11T13:23:37.309Z
 * Generated source version: 2.7.11
 * 
 */
public final class IConnectPointReservation_BasicHttpBindingIConnectPointReservation_Client {

    private static final QName SERVICE_NAME = new QName("http://tempuri.org/", "ConnectPoint_Reservation");

    private IConnectPointReservation_BasicHttpBindingIConnectPointReservation_Client() {
    }

    public static void main(String args[]) throws java.lang.Exception {
        URL wsdlURL = ConnectPointReservation.WSDL_LOCATION;
        if (args.length > 0 && args[0] != null && !"".equals(args[0])) { 
            File wsdlFile = new File(args[0]);
            try {
                if (wsdlFile.exists()) {
                    wsdlURL = wsdlFile.toURI().toURL();
                } else {
                    wsdlURL = new URL(args[0]);
                }
            } catch (MalformedURLException e) {
                e.printStackTrace();
            }
        }
      
        ConnectPointReservation ss = new ConnectPointReservation(wsdlURL, SERVICE_NAME);
        IConnectPointReservation port = ss.getBasicHttpBindingIConnectPointReservation();  
        
        {
        System.out.println("Invoking modifyPNR...");
        com.gzipcompressiontest.services.connectpoint_reservation.model.tempuri.ModifyPNR _modifyPNR_parameters = null;
        com.gzipcompressiontest.services.connectpoint_reservation.model.tempuri.ModifyPNRResponse _modifyPNR__return = port.modifyPNR(_modifyPNR_parameters);
        System.out.println("modifyPNR.result=" + _modifyPNR__return);


        }
        {
        System.out.println("Invoking evaluateModificationOfPNR...");
        com.gzipcompressiontest.services.connectpoint_reservation.model.tempuri.EvaluateModificationOfPNR _evaluateModificationOfPNR_parameters = null;
        com.gzipcompressiontest.services.connectpoint_reservation.model.tempuri.EvaluateModificationOfPNRResponse _evaluateModificationOfPNR__return = port.evaluateModificationOfPNR(_evaluateModificationOfPNR_parameters);
        System.out.println("evaluateModificationOfPNR.result=" + _evaluateModificationOfPNR__return);


        }
        {
        System.out.println("Invoking addPenalties...");
        com.gzipcompressiontest.services.connectpoint_reservation.model.tempuri.AddPenalties _addPenalties_parameters = null;
        com.gzipcompressiontest.services.connectpoint_reservation.model.tempuri.AddPenaltiesResponse _addPenalties__return = port.addPenalties(_addPenalties_parameters);
        System.out.println("addPenalties.result=" + _addPenalties__return);


        }
        {
        System.out.println("Invoking addTaxes...");
        com.gzipcompressiontest.services.connectpoint_reservation.model.tempuri.AddTaxes _addTaxes_parameters = null;
        com.gzipcompressiontest.services.connectpoint_reservation.model.tempuri.AddTaxesResponse _addTaxes__return = port.addTaxes(_addTaxes_parameters);
        System.out.println("addTaxes.result=" + _addTaxes__return);


        }
        {
        System.out.println("Invoking overrideReservationCharges...");
        com.gzipcompressiontest.services.connectpoint_reservation.model.tempuri.OverrideReservationCharges _overrideReservationCharges_parameters = null;
        com.gzipcompressiontest.services.connectpoint_reservation.model.tempuri.OverrideReservationChargesResponse _overrideReservationCharges__return = port.overrideReservationCharges(_overrideReservationCharges_parameters);
        System.out.println("overrideReservationCharges.result=" + _overrideReservationCharges__return);


        }
        {
        System.out.println("Invoking createPNRExt...");
        com.gzipcompressiontest.services.connectpoint_reservation.model.tempuri.CreatePNRExt _createPNRExt_parameters = null;
        com.gzipcompressiontest.services.connectpoint_reservation.model.tempuri.CreatePNRExtResponse _createPNRExt__return = port.createPNRExt(_createPNRExt_parameters);
        System.out.println("createPNRExt.result=" + _createPNRExt__return);


        }
        {
        System.out.println("Invoking cancelPNRFFPAllTaxes...");
        com.gzipcompressiontest.services.connectpoint_reservation.model.tempuri.CancelPNRFFPAllTaxes _cancelPNRFFPAllTaxes_parameters = null;
        com.gzipcompressiontest.services.connectpoint_reservation.model.tempuri.CancelPNRFFPAllTaxesResponse _cancelPNRFFPAllTaxes__return = port.cancelPNRFFPAllTaxes(_cancelPNRFFPAllTaxes_parameters);
        System.out.println("cancelPNRFFPAllTaxes.result=" + _cancelPNRFFPAllTaxes__return);


        }
        {
        System.out.println("Invoking retrievePNR...");
        com.gzipcompressiontest.services.connectpoint_reservation.model.tempuri.RetrievePNR _retrievePNR_parameters = null;
        com.gzipcompressiontest.services.connectpoint_reservation.model.tempuri.RetrievePNRResponse _retrievePNR__return = port.retrievePNR(_retrievePNR_parameters);
        System.out.println("retrievePNR.result=" + _retrievePNR__return);


        }
        {
        System.out.println("Invoking getReservation...");
        com.gzipcompressiontest.services.connectpoint_reservation.model.tempuri.GetReservation _getReservation_parameters = null;
        com.gzipcompressiontest.services.connectpoint_reservation.model.tempuri.GetReservationResponse _getReservation__return = port.getReservation(_getReservation_parameters);
        System.out.println("getReservation.result=" + _getReservation__return);


        }
        {
        System.out.println("Invoking getApisInfo...");
        com.gzipcompressiontest.services.connectpoint_reservation.model.tempuri.GetApisInfo _getApisInfo_parameters = null;
        com.gzipcompressiontest.services.connectpoint_reservation.model.tempuri.GetApisInfoResponse _getApisInfo__return = port.getApisInfo(_getApisInfo_parameters);
        System.out.println("getApisInfo.result=" + _getApisInfo__return);


        }
        {
        System.out.println("Invoking createPNRFFP...");
        com.gzipcompressiontest.services.connectpoint_reservation.model.tempuri.CreatePNRFFP _createPNRFFP_parameters = null;
        com.gzipcompressiontest.services.connectpoint_reservation.model.tempuri.CreatePNRFFPResponse _createPNRFFP__return = port.createPNRFFP(_createPNRFFP_parameters);
        System.out.println("createPNRFFP.result=" + _createPNRFFP__return);


        }
        {
        System.out.println("Invoking modifyPNRFFP...");
        com.gzipcompressiontest.services.connectpoint_reservation.model.tempuri.ModifyPNRFFP _modifyPNRFFP_parameters = null;
        com.gzipcompressiontest.services.connectpoint_reservation.model.tempuri.ModifyPNRFFPResponse _modifyPNRFFP__return = port.modifyPNRFFP(_modifyPNRFFP_parameters);
        System.out.println("modifyPNRFFP.result=" + _modifyPNRFFP__return);


        }
        {
        System.out.println("Invoking cancelPNRFFP...");
        com.gzipcompressiontest.services.connectpoint_reservation.model.tempuri.CancelPNRFFP _cancelPNRFFP_parameters = null;
        com.gzipcompressiontest.services.connectpoint_reservation.model.tempuri.CancelPNRFFPResponse _cancelPNRFFP__return = port.cancelPNRFFP(_cancelPNRFFP_parameters);
        System.out.println("cancelPNRFFP.result=" + _cancelPNRFFP__return);


        }
        {
        System.out.println("Invoking summaryPNR...");
        com.gzipcompressiontest.services.connectpoint_reservation.model.tempuri.SummaryPNR _summaryPNR_parameters = null;
        com.gzipcompressiontest.services.connectpoint_reservation.model.tempuri.SummaryPNRResponse _summaryPNR__return = port.summaryPNR(_summaryPNR_parameters);
        System.out.println("summaryPNR.result=" + _summaryPNR__return);


        }
        {
        System.out.println("Invoking holdInventory...");
        com.gzipcompressiontest.services.connectpoint_reservation.model.tempuri.HoldInventory _holdInventory_parameters = null;
        com.gzipcompressiontest.services.connectpoint_reservation.model.tempuri.HoldInventoryResponse _holdInventory__return = port.holdInventory(_holdInventory_parameters);
        System.out.println("holdInventory.result=" + _holdInventory__return);


        }
        {
        System.out.println("Invoking getReservationBalance...");
        com.gzipcompressiontest.services.connectpoint_reservation.model.tempuri.GetReservationBalance _getReservationBalance_parameters = null;
        com.gzipcompressiontest.services.connectpoint_reservation.model.tempuri.GetReservationBalanceResponse _getReservationBalance__return = port.getReservationBalance(_getReservationBalance_parameters);
        System.out.println("getReservationBalance.result=" + _getReservationBalance__return);


        }
        {
        System.out.println("Invoking historyPNR...");
        com.gzipcompressiontest.services.connectpoint_reservation.model.tempuri.HistoryPNR _historyPNR_parameters = null;
        com.gzipcompressiontest.services.connectpoint_reservation.model.tempuri.HistoryPNRResponse _historyPNR__return = port.historyPNR(_historyPNR_parameters);
        System.out.println("historyPNR.result=" + _historyPNR__return);


        }
        {
        System.out.println("Invoking summaryPNRExt...");
        com.gzipcompressiontest.services.connectpoint_reservation.model.tempuri.SummaryPNRExt _summaryPNRExt_parameters = null;
        com.gzipcompressiontest.services.connectpoint_reservation.model.tempuri.SummaryPNRExtResponse _summaryPNRExt__return = port.summaryPNRExt(_summaryPNRExt_parameters);
        System.out.println("summaryPNRExt.result=" + _summaryPNRExt__return);


        }
        {
        System.out.println("Invoking cancelPNR...");
        com.gzipcompressiontest.services.connectpoint_reservation.model.tempuri.CancelPNR _cancelPNR_parameters = null;
        com.gzipcompressiontest.services.connectpoint_reservation.model.tempuri.CancelPNRResponse _cancelPNR__return = port.cancelPNR(_cancelPNR_parameters);
        System.out.println("cancelPNR.result=" + _cancelPNR__return);


        }
        {
        System.out.println("Invoking releaseInventory...");
        com.gzipcompressiontest.services.connectpoint_reservation.model.tempuri.ReleaseInventory _releaseInventory_parameters = null;
        com.gzipcompressiontest.services.connectpoint_reservation.model.tempuri.ReleaseInventoryResponse _releaseInventory__return = port.releaseInventory(_releaseInventory_parameters);
        System.out.println("releaseInventory.result=" + _releaseInventory__return);


        }
        {
        System.out.println("Invoking overBook...");
        com.gzipcompressiontest.services.connectpoint_reservation.model.tempuri.OverBook _overBook_parameters = null;
        com.gzipcompressiontest.services.connectpoint_reservation.model.tempuri.OverBookResponse _overBook__return = port.overBook(_overBook_parameters);
        System.out.println("overBook.result=" + _overBook__return);


        }
        {
        System.out.println("Invoking setApisInfo...");
        com.gzipcompressiontest.services.connectpoint_reservation.model.tempuri.SetApisInfo _setApisInfo_parameters = null;
        com.gzipcompressiontest.services.connectpoint_reservation.model.tempuri.SetApisInfoResponse _setApisInfo__return = port.setApisInfo(_setApisInfo_parameters);
        System.out.println("setApisInfo.result=" + _setApisInfo__return);


        }
        {
        System.out.println("Invoking createPNR...");
        com.gzipcompressiontest.services.connectpoint_reservation.model.tempuri.CreatePNR _createPNR_parameters = null;
        com.gzipcompressiontest.services.connectpoint_reservation.model.tempuri.CreatePNRResponse _createPNR__return = port.createPNR(_createPNR_parameters);
        System.out.println("createPNR.result=" + _createPNR__return);


        }
        {
        System.out.println("Invoking cancelPNRFFPAutoCancel...");
        com.gzipcompressiontest.services.connectpoint_reservation.model.tempuri.CancelPNRFFPAutoCancel _cancelPNRFFPAutoCancel_parameters = null;
        com.gzipcompressiontest.services.connectpoint_reservation.model.tempuri.CancelPNRFFPAutoCancelResponse _cancelPNRFFPAutoCancel__return = port.cancelPNRFFPAutoCancel(_cancelPNRFFPAutoCancel_parameters);
        System.out.println("cancelPNRFFPAutoCancel.result=" + _cancelPNRFFPAutoCancel__return);


        }
        {
        System.out.println("Invoking importPNR...");
        com.gzipcompressiontest.services.connectpoint_reservation.model.tempuri.ImportPNR _importPNR_parameters = null;
        com.gzipcompressiontest.services.connectpoint_reservation.model.tempuri.ImportPNRResponse _importPNR__return = port.importPNR(_importPNR_parameters);
        System.out.println("importPNR.result=" + _importPNR__return);


        }

        System.exit(0);
    }

}
